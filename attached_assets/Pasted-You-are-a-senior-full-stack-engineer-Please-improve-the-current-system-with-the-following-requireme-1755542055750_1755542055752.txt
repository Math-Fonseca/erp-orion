You are a senior full-stack engineer. Please improve the current system with the following requirements.  
Use good programming practices, MVC structure, responsive modern design, and ensure all data is properly connected to the database.  

---

### üîπ Fixes and Enhancements

#### 1. Samples (Amostras)
- Add **tracking code (C√≥digo de Rastreio)** field to be visible in the sample list and details view.  
- Fix **Status values**: must display without underscores. Correct options are:  
  - "Em Andamento", "Aprovado", "Reprovado", "Encerrado".  
- Each **Preg√£o de Amostra** must allow attaching **Items** (1:N relationship):  
  - Fields: C√≥digo do Item, Descri√ß√£o, Marca, Lote, Quantidade, Resultado da Avalia√ß√£o (Aprovado/Reprovado/Pendente), Motivo da Reprova√ß√£o (only if status = Reprovado).  
- Items must support **full CRUD (add, edit, delete)** inside the sample.  
- Dashboard cards and lists must use these real values instead of static placeholders.

#### 2. Processes (Processos / Homologated Biddings)
- Add support to register **Homologated Preg√µes**.  
- Each Process must have: N¬∫ do Contrato, √ìrg√£o, Tipo de Contrata√ß√£o (Registro de Pre√ßos, Compra Direta, Dispensa, CD+RP), Vig√™ncia (meses), Status, and Data do Contrato.  
- Inside each Process, allow adding **Items** with: C√≥digo, Descri√ß√£o, Marca, Modelo, Lote, Quantidade, Unit Price.  
- The system must automatically calculate **Total Value = Quantidade √ó Unit Price**.  
- Add the ability to register **Empenhos** under each Process:  
  - For each Empenho, select which Items are included, their quantities, and values.  
  - When an Empenho is created, the system must automatically **deduct** the quantity and value from the Process/Contract totals.  
- Ensure % Empenhado, Saldo, and Total Values are calculated dynamically based on real data.

#### 3. Catalog of Items
- Add **Lote (Batch)** as a mandatory field.  
- Catalog must allow search by C√≥digo, Descri√ß√£o, Marca, and Lote.  
- Support importing Excel files into the Catalog (with validation: no duplicates, no empty required fields).  

#### 4. Dashboard & Reports
- **Remove all mock data**. All metrics must be calculated directly from the database:  
  - Samples ‚Üí count in progress, approved, rejected, closed.  
  - Processes ‚Üí active, expired, % empenhado, saldo.  
  - Catalog ‚Üí total items, grouped by brand/lote.  
- **Filters must work dynamically**:  
  - If ‚ÄúSamples‚Äù is selected, show metrics about amostras.  
  - If ‚ÄúProcesses‚Äù is selected, show contracts, empenhos, balances.  
  - If ‚ÄúGeneral‚Äù is selected, aggregate everything.  
- Reports (charts, analytics) must always reflect **real-time data**.  
- Export options (Excel, PDF, CSV) must use **actual filtered results**.  

#### 5. General
- Responsive design across desktop and mobile.  
- Clean UI with badges (status, % empenhado, etc.).  
- All tables must update automatically when new data is created/edited/deleted.  
- Follow MVC architecture with a clear separation of controllers, models, and views.  

---

### üîπ Tech Notes
- Ensure backend is properly handling validation (e.g., no duplicate preg√£o number, required fields).  
- All numbers (values, quantities) must be formatted according to Brazilian standards (e.g., R$ 1.250,00).  
- Use database queries for analytics (group by month, group by org, etc.) instead of static placeholders.  
- Keep the system scalable: processes, samples, items, and empenhos must have proper relationships in the DB schema.  

---

‚ö° Final goal: The system must allow full management of **Samples, Processes, Catalog, Reports** with real data persistence, no mock values, dynamic calculations, and user-friendly design.
